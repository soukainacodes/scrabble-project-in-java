# Descripcion del juego de pruebas de flujo de juego (OPCION 2)

1. Objeto de la prueba  
Verificar de forma integrada tres escenarios de juego usando CtrlDominio y el driver, cubriendo:  
- Prueba 1: Modo 1 Jugador vs IA en Catalan.  
- Prueba 2: Modo 2 Jugadores (JvJ) en Ingles.  
- Prueba 3: IA vs IA en Castellano.  

Cada prueba simula un flujo completo (creacion de partida, movimientos, puntuacion, cambio de fichas y guardado o abandono) e informa “OK” o “FALLO” en cada paso.

2. Componentes integrados  
- DriverGestionJuego (menu interactivo y automatizado)  
- CtrlDominio, que invoca:  
  - CtrlPartida (logica del juego)  
  - CtrlPersistencia (almacena partidas)  
- Recursos de idiomas (diccionarios y bolsas) ya presentes en el proyecto.

3. Datos necesarios  
- Diccionario y bolsa del idioma correspondiente.  
- Usuarios de prueba:  
  - Prueba1: nombreJugador (usuario en sesion)  
  - Prueba2: “Jordi” y “Maria” con password “123456”  
- Semilla fija (123L) para determinismo.  
- No se requieren ficheros externos adicionales.

4. Parametros de las pruebas  
- Prueba1:  
  - Modo=0 (1 Jugador vs IA)  
  - Idioma=Catalan  
  - Secuencia de acciones: crear, mostrar estado, anadir ficha, quitar ficha, formar palabra “REGLANT”, finalizar turno, pasar turno, cambio de fichas [R,I,E,E,S], guardar partida “PRUEBA_1Jugador_Catalan”.  
- Prueba2:  
  - Modo=1 (2 Jugadores)  
  - Idioma=Ingles  
  - Usuarios=[Jordi,Maria]  
  - Secuencia de turnos: Jugador1 forma “HANDLES”, Jugador2 forma “WIENIE”, Jugador1 abandona, mostrar resultado final.  
- Prueba3:  
  - Modo=0 + IA vs IA activo  
  - Idioma=Castellano  
  - Nombres IA: GLaDOS vs Skynet  
  - Simulacion hasta 10 turnos automaticos, luego verificar fin por abandono o sin movimientos.

5. Pasos verificables  
Para cada prueba:  
  1. Crear partida → OK si cd.iniciarPartida(...) no lanza excepcion.  
  2. Mostrar estado inicial → OK si getPuntos y mostrarTablero no fallan.  
  3. Ejecutar cada accion (anadir, quitar, formar palabra, pasar turno, cambio de fichas, turno IA) → OK/FALLO segun excepciones.  
  4. Guardar o abandonar partida (segun prueba) → OK si cd.guardarPartida o cd.jugarScrabble(6,…) funciona.  
  5. Verificar guardado o resultado final → OK si getPuntos refleja puntuacion esperada o partida no existe tras abandono.

Al finalizar cada prueba, se muestra un resumen:
- “Todas las pruebas se ejecutaron correctamente.”  
- o  
- “Algunas pruebas fallaron. Revisar errores.”

6. Como ejecutar  
1. Compilar el proyecto:  
   make code  
2. Ejecutar el driver de juego:  
   make runcode_juego  
3. En el menu principal seleccionar:  
   2 Juego de pruebas
